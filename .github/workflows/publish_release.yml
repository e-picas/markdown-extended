
name: "Publish release"
run-name: "Publish a release by merging it to master and deleting the release branch"

on:
  workflow_dispatch:
    inputs:
      targetBranch:
        description: 'Target branch'
        required: true
        default: 'master'
        type: choice
        options:
        - master

permissions:
  contents: read # for checkout

jobs:

  bump_release:
    name: "Publish release"
    if: ${{ contains(github.ref_name, 'release-') && github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Setup git
        run: |
          git config user.email "${{ env.GITHUB_TRIGGERING_ACTOR }}"
          git config user.name "github-ci-bot"

      - name: Merging release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          git fetch
          git rev-parse --verify ${{ inputs.targetBranch }} && git branch -D ${{ inputs.targetBranch }}
          git checkout --force --track origin/${{ inputs.targetBranch }}
          git reset --hard origin/${{ inputs.targetBranch }}
          git merge --no-ff --no-edit --no-commit origin/${{ github.ref_name }}
          NEED_COMMIT=$(git diff --name-status --cached --exit-code 1>/dev/null; echo $?;)
          if [[ $NEED_COMMIT == 1 ]]
          then
            git commit -m "ci(${{ github.ref_name }}): merging prepared release"
            git push origin ${{ inputs.targetBranch }}
          else
            echo "> no changes to be commited on ${{ inputs.targetBranch }}"
            echo "> no new release to bump"
          fi
          # delete release branch
          git push --delete origin ${{ github.ref_name }}
